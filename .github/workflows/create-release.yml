on:
  pull_request:
    branches:
    - main
    types: [closed]

name: '[autorelease] Create release'

permissions:
  contents: read

jobs:
  can-run:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'autorelease')
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - run: echo 'Running create release!'
  # Python
  build-compiled-python:
    runs-on: ${{ matrix.platform.runner }}
    needs: can-run
    defaults:
      run:
        working-directory: bindings/python
        shell: bash
    permissions:
      id-token: write
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            cargo-target: x86_64
            python-target: x64
            manylinux: auto
            name: linux
          - runner: ubuntu-latest
            cargo-target: x86
            python-target: x64
            manylinux: auto
            name: linux
          - runner: ubuntu-latest
            cargo-target: aarch64
            python-target: x64
            manylinux: auto
            name: linux
          - runner: ubuntu-latest
            cargo-target: armv7
            python-target: x64
            manylinux: auto
            name: linux
          - runner: ubuntu-latest
            cargo-target: s390x
            python-target: x64
            manylinux: auto
            name: linux
          - runner: ubuntu-latest
            cargo-target: ppc64le
            python-target: x64
            manylinux: auto
            name: linux
          - runner: ubuntu-latest
            cargo-target: x86_64
            python-target: x64
            manylinux: musllinux_1_2
            name: musllinux
          - runner: ubuntu-latest
            cargo-target: x86
            python-target: x64
            manylinux: musllinux_1_2
            name: musllinux
          - runner: ubuntu-latest
            cargo-target: aarch64
            python-target: x64
            manylinux: musllinux_1_2
            name: musllinux
          - runner: ubuntu-latest
            cargo-target: armv7
            python-target: x64
            manylinux: musllinux_1_2
            name: musllinux
          - runner: windows-latest
            cargo-target: x64
            python-target: x64
            manylinux: auto
            name: windows
          - runner: windows-latest
            cargo-target: x86
            python-target: x86
            manylinux: auto
            name: windows
          - runner: macos-12
            cargo-target: x86_64
            python-target: x64
            manylinux: auto
            name: macos
          - runner: macos-14
            cargo-target: aarch64
            python-target: arm64
            manylinux: auto
            name: macos
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive
      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # 5.3.0
        with:
          python-version: "3"
          architecture: ${{ matrix.platform.python-target }}
      - name: Build wheels
        uses: PyO3/maturin-action@49453e0a6599125b2698abe070e181399fbcc9ab # v1.47.1
        with:
          target: ${{ matrix.platform.cargo-target }}
          args: --release --out wheels-${{ matrix.platform.name }}-${{ matrix.platform.cargo-target }} --find-interpreter
          sccache: 'true'
          manylinux: ${{ matrix.platform.manylinux }}
          working-directory: bindings/python
      - name: Fix permissions
        if: ${{ matrix.platform.runner == 'ubuntu-latest' }}
        run: sudo chown --recursive $(id -u):$(id -g) wheels-* && sudo chmod --recursive u+rw wheels-*
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@f514d46b907ebcd5bedc05145c03b69c1edd8b46 # v3.0.0
        with:
          inputs: |
            bindings/python/wheels-*/*.whl
      - name: Upload wheels
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: wheels-${{ matrix.platform.name }}-${{ matrix.platform.cargo-target }}
          path: bindings/python/wheels-${{ matrix.platform.name }}-${{ matrix.platform.cargo-target }}

  build-source-python:
    runs-on: ubuntu-latest
    needs: can-run
    defaults:
      run:
        shell: bash
    permissions:
      id-token: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive
      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: "3"
      - name: Prepare Python sdist
        run: 'python scripts/prepare_python_sdist.py $GITHUB_SHA'
      - name: Build sdist
        uses: PyO3/maturin-action@49453e0a6599125b2698abe070e181399fbcc9ab # v1.47.1
        with:
          command: sdist
          args: --out wheels-source
          working-directory: bindings/python
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@f514d46b907ebcd5bedc05145c03b69c1edd8b46 # v3.0.0
        with:
          inputs: |
            bindings/python/wheels-*/*.tar.gz
      - name: Upload sdist
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: wheels-sdist
          path: bindings/python/wheels-source

  # C: TODO
  # C++: TODO

  github-release:
    needs: [build-compiled-python, build-source-python]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get release version
        id: get-release-version
        env:
          PULL_REQUEST_HEAD_REF: ${{ github.event.pull_request.head.ref }}
        run: |
          # Head branch should be named autorelease/<version>
          if ! [[ "${PULL_REQUEST_HEAD_REF}" =~ ^autorelease\/[A-Za-z0-9.+-]+$ ]]; then
            echo "Invalid branch"
            exit 1
          fi
          VERSION=$(echo "${PULL_REQUEST_HEAD_REF}" | awk -F/ '{print $2}')
          echo "VERSION=$VERSION"
          echo "name=release-version::$VERSION" >> $GITHUB_OUTPUT

      - name: Get release notes
        id: query-release-info
        uses: release-flow/keep-a-changelog-action@74931dec7ecdbfc8e38ac9ae7e8dd84c08db2f32 # v3.0.0
        with:
          command: query
          version: latest

      - name: Display release notes
        run: |
          echo "${{ steps.query-release-info.outputs.release-notes }}"

      - name: Display release version
        run: |
          echo "GIT=${{ steps.get-release-version.outputs.release-version }}"
          echo "CHANGELOG=${{ steps.query-release-info.outputs.version }}"

      - uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
      - name: Create Python Archive
        run: tar -czf python-wheels.tar.gz wheels-*/*.whl wheels-*/*.tar.gz wheels-*/*.whl.sigstore wheels-*/*.tar.gz.sigstore

      - name: Create Tag
        run: |
          next_version=v${{ steps.query-release-info.outputs.version }}
          git tag -a '${next_version}' -m 'Preparing release: ${next_version}'
          git push --follow-tags
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          'v${{ steps.query-release-info.outputs.version }}'
          --repo '${{ github.repository }}'
          --title 'Release ${{ steps.query-release-info.outputs.version }}'
          --notes ${{ steps.query-release-info.outputs.release-notes }}
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          'v${{ steps.query-release-info.outputs.version }}' python-wheels.tar.gz
          --repo '${{ github.repository }}'

  python-pypi-release:
    needs: github-release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'autorelease')
    environment: release
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
      - name: Publish to PyPI
        uses: PyO3/maturin-action@49453e0a6599125b2698abe070e181399fbcc9ab # v1.47.1
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*.whl wheels-*/*.tar.gz

  rust-crates-release:
    needs: github-release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'autorelease')
    environment: release
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: dtolnay/rust-toolchain@d0592fe69e35bc8f12e3dbaf9ad2694d976cb8e3 # stable
      - uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5
        with:
          shared-key: release-${{runner.os}}
      - name: Publish to Crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish
