on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type'
        type: choice
        required: true
        options:
        - major
        - minor
        - patch
        - premajor
        - preminor
        - prepatch
        - prerelease
        default: patch
      prerelease-identifier:
        description: 'Pre-release identifier (only for pre-release builds)'
        required: false

name: '[autorelease] Prepare release PR'

permissions:
  contents: read

jobs:
  changelog:
    name: Update changelog and create PR
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
      with:
        egress-policy: audit

    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        ref: ${{ github.head_ref }}

    - name: Update changelog
      id: update-changelog
      uses: release-flow/keep-a-changelog-action@74931dec7ecdbfc8e38ac9ae7e8dd84c08db2f32 # v3.0.0
      with:
        command: bump
        version: ${{ github.event.inputs.release-type }}
        preid: ${{ github.event.inputs.prerelease-identifier }}

    - name: 'Setup Python'
      uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
      with:
        python-version: '3'
    - name: 'Prepare Package Release'
      run: 'python scripts/prepare.py ${{ steps.update-changelog.outputs.version }}'

    - name: 'Ensure autorelease label exists'
      run: |
        LABEL=$(gh api repos/$GITHUB_REPOSITORY/labels --jq '.[] | select(.name=="autorelease")')
        if [[ -z "$LABEL" ]]; then
          echo "Creating 'autorelease' label"
          gh api --silent repos/$GITHUB_REPOSITORY/labels -f name="autorelease" -f color="baa938" -f description="This is an automatically-created PR to trigger a release"
        else
          echo "'autorelease' label exists"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Pull Request
      id: create-release-pr
      uses: peter-evans/create-pull-request@6cd32fd93684475c31847837f87bb135d40a2b79 # v7.0.3
      with:
        commit-message: 'chore: Update project files release ${{ steps.update-changelog.outputs.version }}'
        committer: 'releasebot <noreply@github.com>'
        branch: 'autorelease/${{ steps.update-changelog.outputs.version }}'
        title: '[autorelease] Release ${{ steps.update-changelog.outputs.version }}'
        # Be careful of newlines here. We need to use the literal block chomping style (|) so that the
        # contents of the release notes don't get chomped. See https://yaml-multiline.info/
        body: |
          **This PR was created automatically by the releasebot**

          :warning: **Approving this PR will trigger a workflow that generates a draft release. You need to publish this release when you are happy with it.**

          The changes in this PR prepare for release ${{ steps.update-changelog.outputs.version }}. The generated release notes will be:

          ---

          ${{ steps.update-changelog.outputs.release-notes }}
        labels: autorelease
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Output summary
      run: |
        echo "::notice:: Created a release PR, please merge it to continue with the release process: ${{
        steps.create-release-pr.outputs.pull-request-url }}"
