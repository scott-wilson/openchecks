[build-system]
requires = ["maturin>=1.4,<2.0"]
build-backend = "maturin"

[project]
name = "openchecks"
description = "A simple checks framework"
authors = [{ name = "Scott Wilson", email = "scott@propersquid.com" }]
license = { text = "MIT OR Apache-2.0" }
readme = "README.md"
requires-python = "~=3.7"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version"]

[project.urls]
documentation = "https://openchecks.readthedocs.io/"
repository = "https://github.com/scott-wilson/openchecks/"

[project.optional-dependencies]
build = [
    "maturin ~= 1.4; platform_system != \"Linux\"",
    "maturin[patchelf] ~= 1.4; platform_system == \"Linux\"",
]
test = [
    "hypothesis ~= 6.79",
    "pytest ~= 7.4; python_version == \"3.7\"",
    "pytest ~= 8.2; python_version > \"3.7\"",
    "pytest-asyncio ~= 0.21",
    "pytest-cov ~= 4.1; python_version == \"3.7\"",
    "pytest-cov ~= 5.0; python_version > \"3.7\"",
    "pytest-xdist ~= 3.5",
    "ruff ~= 0.2",
]
docs = [
    "myst-parser ~= 1.0; python_version == \"3.7\"",
    "myst-parser ~= 3.0; python_version > \"3.7\"",
    "sphinx ~= 5.3; python_version == \"3.7\"",
    "sphinx ~= 6.2; python_version >= \"3.8\" and python_version < \"3.9\"",
    "sphinx >= 7.2,< 9.0; python_version >= \"3.9\"",
    "sphinx-rtd-theme ~= 2.0",
]
fuzz = ["openchecks[test]", "atheris ~= 2.3"]

[tool.maturin]
features = ["pyo3/extension-module"]

[tool.ruff]
lint.select = ["ANN", "BLE", "D", "E", "F", "I", "N", "PT", "S", "YTT"]
line-length = 88
lint.ignore = ["ANN101", "ANN102"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
# Start off with these
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
no_implicit_optional = true

# Getting these passing should be easy
strict_equality = true
strict_concatenate = true

# Strongly recommend enabling this one as soon as you can
check_untyped_defs = true

# These shouldn't be too much additional work, but may be tricky to
# get passing if you use a lot of untyped libraries
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_any_generics = true

# These next few are various gradations of forcing use of type annotations
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_defs = true

# This one isn't too hard to get passing, but return on investment is lower
no_implicit_reexport = true

# This one can be tricky to get passing if you use a lot of untyped libraries
warn_return_any = true
